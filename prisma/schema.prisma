// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  posts     Post[]
  comments  Comment[]
  likes     Like[]
}

model Post {
  id           Int       @id @default(autoincrement())
  title        String
  content      String
  summary      String
  authorId     Int
  author       User      @relation(fields: [authorId], references: [id])
  comments     Comment[]
  likes        Like[]
  views        Int       @default(0)
  createdAt    DateTime  @default(now())
  onChainRef   String?   // Optional: link to the blockchain reference, if minted as NFT
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}

model Like {
  id        Int      @id @default(autoincrement())
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())

  @@unique([postId, authorId])
}